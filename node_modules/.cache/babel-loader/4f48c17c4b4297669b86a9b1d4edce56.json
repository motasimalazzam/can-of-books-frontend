{"ast":null,"code":"var _jsxFileName = \"/home/motasim/asac-301/301-labs/book-app/can-of-books-frontend/src/myFavoriteBooks.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './myFavoriteBooks.css';\nimport axios from 'axios';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from './form';\nimport UpdateBookForm from './updateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const books = await axios.get(`${this.state.server}/books`, {\n        params: {\n          email: this.props.auth0.user.email\n        }\n      });\n      console.log('books', books.data);\n      this.setState({\n        books: books.data,\n        showBooks: true\n      });\n    };\n\n    this.updateBook = async e => {\n      e.preventDefault(); // const { user } = this.props.auth0;\n\n      const bookData = {\n        bookName: this.state.bookName,\n        description: this.state.description,\n        urlImg: this.state.urlImg,\n        ownerEmail: this.props.auth0.user.email\n      };\n      console.log('hi updatebook');\n      let booksData = await axios.put(`${this.state.server}/updatebook/${this.state.index}`, bookData);\n      this.setState({\n        books: booksData.data\n      });\n    };\n\n    this.showUpdateForm = idx => {\n      const chosenBook = this.state.books.filter((val, index) => {\n        return idx === index;\n      });\n      console.log('hi', chosenBook);\n      this.setState({\n        showUpdateStatus: true,\n        index: idx,\n        bookName: chosenBook[0].bookName,\n        description: chosenBook[0].description,\n        urlImg: chosenBook[0].urlImg\n      });\n    };\n\n    this.updateBookName = event => {\n      this.setState({\n        bookName: event.target.value\n      });\n    };\n\n    this.updateDescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.updateUrlImg = event => {\n      this.setState({\n        urlImg: event.target.value\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleClose1 = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showUpdateStatus: false\n      });\n    };\n\n    this.addBook = async event => {\n      event.preventDefault();\n      const bookFormData = {\n        bookName: this.state.bookName,\n        description: this.state.description,\n        urlImg: this.state.urlImg,\n        ownerEmail: this.props.auth0.user.email\n      };\n      const newBooks = await axios.post(`${this.state.server}/addBook`, bookFormData);\n      this.setState({\n        books: newBooks.data\n      });\n    };\n\n    this.deleteBook = async index => {\n      const ownerEmail = {\n        ownerEmail: this.props.auth0.user.email\n      };\n      let newBooks = await axios.delete(`${this.state.server}/deleteBook/${index}`, {\n        params: ownerEmail\n      });\n      this.setState({\n        books: newBooks.data\n      });\n    };\n\n    this.state = {\n      books: [],\n      showBooks: false,\n      bookName: '',\n      description: '',\n      urlImg: '',\n      server: process.env.REACT_APP_SERVER,\n      showUpdateStatus: false,\n      show: false,\n      index: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Favorite Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        onClick: this.showModal,\n        size: \"lg\",\n        block: true,\n        children: \"ADD BOOK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), this.state.show && /*#__PURE__*/_jsxDEV(Form, {\n        updateBookNameProps: this.updateBookName,\n        updateBookDescriptionProps: this.updateDescription,\n        updateBookUrlImgProps: this.updateUrlImg,\n        addBookProps: this.addBook,\n        handleClose1: this.handleClose1,\n        show: this.state.show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), this.state.showUpdateStatus && /*#__PURE__*/_jsxDEV(UpdateBookForm, {\n        bookName: this.state.bookName,\n        description: this.state.description,\n        urlImg: this.state.urlImg,\n        updateBookNameProps: this.updateBookName,\n        updateBookDescriptionProps: this.updateDescription,\n        updateBookUrlImgProps: this.updateUrlImg,\n        updateBook: this.updateBook,\n        showUpdateStatus: this.state.showUpdateStatus,\n        handleClose: this.handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.showBooks && this.state.books.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.urlImg,\n              alt: item.urlImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.bookName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => this.deleteBook(idx),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-success\",\n                onClick: () => this.showUpdateForm(idx),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withAuth0(MyFavoriteBooks);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/motasim/asac-301/301-labs/book-app/can-of-books-frontend/src/myFavoriteBooks.js"],"names":["React","Jumbotron","axios","withAuth0","Card","Button","Form","UpdateBookForm","MyFavoriteBooks","Component","constructor","props","componentDidMount","books","get","state","server","params","email","auth0","user","console","log","data","setState","showBooks","updateBook","e","preventDefault","bookData","bookName","description","urlImg","ownerEmail","booksData","put","index","showUpdateForm","idx","chosenBook","filter","val","showUpdateStatus","updateBookName","event","target","value","updateDescription","updateUrlImg","showModal","show","handleClose1","handleClose","addBook","bookFormData","newBooks","post","deleteBook","delete","process","env","REACT_APP_SERVER","render","map","item","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './myFavoriteBooks.css';\nimport axios from 'axios';\nimport { withAuth0 } from '@auth0/auth0-react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from './form';\nimport UpdateBookForm from './updateForm';\n\nclass MyFavoriteBooks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      showBooks: false,\n      bookName: '',\n      description: '',\n      urlImg: '',\n      server: process.env.REACT_APP_SERVER,\n      showUpdateStatus: false,\n      show: false,\n      index: 0,\n    }\n  }\n\n  componentDidMount = async () => {\n    const books = await axios.get(`${this.state.server}/books`, { params: { email: this.props.auth0.user.email } })\n    console.log('books', books.data)\n    this.setState({\n      books: books.data,\n      showBooks: true,\n    });\n  }\n\n\n\n  updateBook = async (e) => {\n    e.preventDefault();\n    // const { user } = this.props.auth0;\n    const bookData = {\n      bookName: this.state.bookName,\n      description: this.state.description,\n      urlImg: this.state.urlImg,\n      ownerEmail: this.props.auth0.user.email,\n    }\n\n    console.log('hi updatebook');\n\n    let booksData = await axios.put(`${this.state.server}/updatebook/${this.state.index}`, bookData)\n    this.setState({\n      books: booksData.data\n    })\n  }\n\n\n  showUpdateForm = (idx) => {\n\n    const chosenBook = this.state.books.filter((val, index) => {\n      return idx === index;\n    })\n\n    console.log('hi', chosenBook);\n\n    this.setState({\n      showUpdateStatus: true,\n      index: idx,\n      bookName: chosenBook[0].bookName,\n      description: chosenBook[0].description,\n      urlImg: chosenBook[0].urlImg,\n    })\n  }\n\n\n\n  updateBookName = (event) => {\n    this.setState({\n      bookName: event.target.value\n    })\n  }\n\n\n  updateDescription = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n\n  updateUrlImg = (event) => {\n    this.setState({\n      urlImg: event.target.value\n    })\n  }\n\n  showModal = () => {\n    this.setState({\n      show: true\n    })\n  }\n\n  handleClose1 = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showUpdateStatus: false,\n    })\n  }\n\n\n\n  addBook = async (event) => {\n    event.preventDefault();\n    const bookFormData = {\n      bookName: this.state.bookName,\n      description: this.state.description,\n      urlImg: this.state.urlImg,\n      ownerEmail: this.props.auth0.user.email\n\n    }\n    const newBooks = await axios.post(`${this.state.server}/addBook`, bookFormData)\n\n    this.setState({\n      books: newBooks.data\n    })\n\n  }\n\n\n  deleteBook = async (index) => {\n    const ownerEmail = {\n      ownerEmail: this.props.auth0.user.email\n    }\n    let newBooks = await axios.delete(`${this.state.server}/deleteBook/${index}`, { params: ownerEmail })\n\n    this.setState({\n      books: newBooks.data\n    })\n\n  }\n\n\n  render() {\n    return (\n      <Jumbotron>\n\n\n        <h1>My Favorite Books</h1>\n        <Button variant=\"outline-dark\" onClick={this.showModal} size=\"lg\" block>ADD BOOK</Button>\n        {this.state.show &&\n          <Form\n            updateBookNameProps={this.updateBookName}\n            updateBookDescriptionProps={this.updateDescription}\n            updateBookUrlImgProps={this.updateUrlImg}\n            addBookProps={this.addBook}\n            handleClose1={this.handleClose1}\n            show={this.state.show}\n          />\n        }\n\n        {this.state.showUpdateStatus &&\n          <UpdateBookForm\n            bookName={this.state.bookName}\n            description={this.state.description}\n            urlImg={this.state.urlImg}\n            updateBookNameProps={this.updateBookName}\n            updateBookDescriptionProps={this.updateDescription}\n            updateBookUrlImgProps={this.updateUrlImg}\n            updateBook={this.updateBook}\n            showUpdateStatus={this.state.showUpdateStatus}\n            handleClose={this.handleClose}\n          />\n        }\n        <div>\n\n          {this.state.showBooks &&\n            this.state.books.map((item, idx) => {\n              return (\n\n                <Card style={{ width: '18rem' }}>\n                  <Card.Img variant=\"top\" src={item.urlImg} alt={item.urlImg} />\n                  <Card.Body>\n                    <Card.Title>{item.bookName}</Card.Title>\n                    <Card.Text>\n                      {item.description}\n                    </Card.Text>\n                    <Button variant=\"primary\" onClick={() => this.deleteBook(idx)}>Delete</Button>\n                    <Button variant=\"outline-success\" onClick={() => this.showUpdateForm(idx)}>Update</Button>\n                  </Card.Body>\n                </Card>\n\n              )\n            })}\n\n        </div>\n\n\n      </Jumbotron>\n    )\n  }\n}\n\nexport default withAuth0(MyFavoriteBooks);"]},"metadata":{},"sourceType":"module"}