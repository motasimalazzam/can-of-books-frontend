{"ast":null,"code":"var _jsxFileName = \"/home/motasim/asac-301/301-labs/book-app/can-of-books-frontend/src/myFavoriteBooks.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './myFavoriteBooks.css';\nimport axios from 'axios';\nimport { withAuth0 } from '@auth0/auth0-react'; // import Carousel from 'react-bootstrap/Carousel'\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from './Form';\nimport UpdateBookForm from './UpdateBookForm';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyFavoriteBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const books = await axios.get('http://localhost:3001/books', {\n        params: {\n          email: this.props.auth0.user.email\n        }\n      });\n      console.log('books', books.data);\n      this.setState({\n        books: books.data,\n        showBooks: true\n      });\n    };\n\n    this.updateBookName = event => {\n      this.setState({\n        bookName: event.target.value\n      });\n    };\n\n    this.updateDescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.updateUrlImg = event => {\n      this.setState({\n        urlImg: event.target.value\n      });\n    };\n\n    this.showModel = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleClose1 = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showUpdateStatus: false\n      });\n    };\n\n    this.addBook = async event => {\n      event.preventDefault();\n      const bookFormData = {\n        bookName: this.state.bookName,\n        description: this.state.description,\n        urlImg: this.state.urlImg,\n        ownerEmail: this.props.auth0.user.email\n      };\n      const newBooks = await axios.post(`${this.state.server}/addBook`, bookFormData);\n      this.setState({\n        books: newBooks.data\n      });\n    };\n\n    this.deleteBook = async index => {\n      const ownerEmail = {\n        email: this.props.auth0.user.email\n      };\n      let newBooks = await axios.delete(`${this.state.server}/deleteBook/${index}`, {\n        params: ownerEmail\n      });\n      this.setState({\n        books: newBooks.data\n      });\n    };\n\n    this.updateBook = async e => {\n      e.preventDefault(); // const { user } = this.props.auth0;\n\n      const bookData = {\n        bookName: this.state.bookName,\n        description: this.state.description,\n        urlImg: this.state.urlImg,\n        ownerEmail: this.props.auth0.user.email\n      };\n      console.log('hi updatebook');\n      let booksData = await axios.put(`${this.state.server}/updatebook/${this.state.index}`, bookData);\n      this.setState({\n        books: booksData.data\n      });\n    };\n\n    this.showUpdateForm = idx => {\n      const chosenBook = this.state.books.filter((val, index) => {\n        return idx === index;\n      });\n      console.log('hi', chosenBook);\n      this.setState({\n        showUpdateStatus: true,\n        index: idx,\n        bookName: chosenBook[0].bookName,\n        description: chosenBook[0].description,\n        urlImg: chosenBook[0].urlImg\n      });\n    };\n\n    this.state = {\n      books: [],\n      showBooks: false,\n      showUpdateStatus: false,\n      show: false,\n      index: 0,\n      bookName: '',\n      description: '',\n      urlImg: '',\n      server: process.env.REACT_APP_SERVER_URL\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Favorite Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-dark\",\n        onClick: this.showModel,\n        size: \"lg\",\n        block: true,\n        children: \"ADD BOOK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), this.state.show && /*#__PURE__*/_jsxDEV(Form, {\n        updateBookNameProps: this.updateBookName,\n        updateBookDescriptionProps: this.updateDescription,\n        updateBookUrlImgProps: this.updateUrlImg,\n        addBookProps: this.addBook,\n        handleClose1: this.handleClose1,\n        show: this.state.show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), this.state.showUpdateStatus && /*#__PURE__*/_jsxDEV(UpdateBookForm, {\n        bookName: this.state.bookName,\n        description: this.state.description,\n        urlImg: this.state.urlImg,\n        updateBookNameProps: this.updateBookName,\n        updateBookDescriptionProps: this.updateDescription,\n        updateBookUrlImgProps: this.updateUrlImg,\n        updateBook: this.updateBook,\n        showUpdateStatus: this.state.showUpdateStatus,\n        handleClose: this.handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"dark\",\n        children: \"This is a collection of my favorite books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 80\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 85\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.showBooks && this.state.books.map((item, idx) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.urlImg,\n              alt: item.urlImg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.bookName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\" \", item.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                onClick: () => this.deleteBook(idx),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-success\",\n                onClick: () => this.showUpdateForm(idx),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withAuth0(MyFavoriteBooks);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/motasim/asac-301/301-labs/book-app/can-of-books-frontend/src/myFavoriteBooks.js"],"names":["React","Jumbotron","axios","withAuth0","Card","Button","Form","UpdateBookForm","Alert","MyFavoriteBooks","Component","constructor","props","componentDidMount","books","get","params","email","auth0","user","console","log","data","setState","showBooks","updateBookName","event","bookName","target","value","updateDescription","description","updateUrlImg","urlImg","showModel","show","handleClose1","handleClose","showUpdateStatus","addBook","preventDefault","bookFormData","state","ownerEmail","newBooks","post","server","deleteBook","index","delete","updateBook","e","bookData","booksData","put","showUpdateForm","idx","chosenBook","filter","val","process","env","REACT_APP_SERVER_URL","render","map","item","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './myFavoriteBooks.css';\nimport axios from 'axios';\nimport { withAuth0 } from '@auth0/auth0-react';\n// import Carousel from 'react-bootstrap/Carousel'\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from './Form';\nimport UpdateBookForm from './UpdateBookForm';\nimport Alert from 'react-bootstrap/Alert';\n\n\nclass MyFavoriteBooks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      showBooks: false,\n      showUpdateStatus: false,\n      show: false,\n      index: 0,\n      bookName: '',\n      description: '',\n      urlImg: '',\n      server: process.env.REACT_APP_SERVER_URL\n    }\n  }\n\n  componentDidMount = async () => {\n    const books = await axios.get('http://localhost:3001/books', { params: { email: this.props.auth0.user.email } })\n    console.log('books', books.data)\n    this.setState({\n      books: books.data,\n      showBooks: true\n    });\n  }\n\n  updateBookName = (event) => {\n    this.setState({\n      bookName: event.target.value\n    })\n  }\n\n  updateDescription = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n  updateUrlImg = (event) => {\n    this.setState({\n      urlImg: event.target.value\n    })\n  }\n\n  showModel = () => {\n    this.setState({\n      show: true\n    })\n  }\n\n  handleClose1 = () => {\n    this.setState({\n      show: false\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      showUpdateStatus: false,\n    })\n  }\n\n  addBook = async (event) => {\n    event.preventDefault();\n    const bookFormData = {\n      bookName: this.state.bookName,\n      description: this.state.description,\n      urlImg: this.state.urlImg,\n      ownerEmail:  this.props.auth0.user.email,\n\n    }\n    const newBooks = await axios.post(`${this.state.server}/addBook`, bookFormData)\n\n    this.setState({\n      books: newBooks.data\n    })\n\n  }\n\n  deleteBook = async (index) => {\n    const ownerEmail = {\n      email: this.props.auth0.user.email\n    }\n    let newBooks = await axios.delete(`${this.state.server}/deleteBook/${index}`, { params: ownerEmail })\n\n    this.setState({\n      books: newBooks.data\n    })\n\n  }\n\n  updateBook = async (e) => {\n    e.preventDefault();\n    // const { user } = this.props.auth0;\n    const bookData = {\n      bookName: this.state.bookName,\n      description: this.state.description,\n      urlImg: this.state.urlImg,\n      ownerEmail: this.props.auth0.user.email,\n    }\n\n    console.log('hi updatebook');\n\n    let booksData = await axios.put(`${this.state.server}/updatebook/${this.state.index}`, bookData)\n    this.setState({\n      books: booksData.data\n    })\n  }\n\n  showUpdateForm = (idx) => {\n\n    const chosenBook = this.state.books.filter((val, index) => {\n      return idx === index;\n    })\n\n    console.log('hi', chosenBook);\n\n    this.setState({\n      showUpdateStatus: true,\n      index: idx,\n      bookName: chosenBook[0].bookName,\n      description: chosenBook[0].description,\n      urlImg: chosenBook[0].urlImg,\n    })\n  }\n\n\n\n  render() {\n    return (\n      <Jumbotron>\n\n        <h1>My Favorite Books</h1>\n        <Button variant=\"outline-dark\" onClick={this.showModel} size=\"lg\" block>ADD BOOK</Button>\n        {this.state.show &&\n          <Form\n            updateBookNameProps={this.updateBookName}\n            updateBookDescriptionProps={this.updateDescription}\n            updateBookUrlImgProps={this.updateUrlImg}\n            addBookProps={this.addBook}\n            handleClose1={this.handleClose1}\n            show={this.state.show}\n          />\n        }\n\n        {this.state.showUpdateStatus &&\n          <UpdateBookForm\n            bookName={this.state.bookName}\n            description={this.state.description}\n            urlImg={this.state.urlImg}\n            updateBookNameProps={this.updateBookName}\n            updateBookDescriptionProps={this.updateDescription}\n            updateBookUrlImgProps={this.updateUrlImg}\n            updateBook={this.updateBook}\n            showUpdateStatus={this.state.showUpdateStatus}\n            handleClose={this.handleClose}\n          />\n        }\n        <br/><br/>\n        <Alert variant=\"dark\">This is a collection of my favorite books</Alert><br/><br/>\n        <div>\n          {this.state.showBooks &&\n            this.state.books.map((item, idx) => {\n              return (\n\n                <Card style={{ width: '18rem' }}>\n                  <Card.Img variant=\"top\" src={item.urlImg} alt={item.urlImg} />\n                  <Card.Body>\n                    <Card.Title>{item.bookName}</Card.Title>\n                    <Card.Text> {item.description}</Card.Text>\n                    <Button variant=\"outline-danger\" onClick={() => this.deleteBook(idx)}>Delete</Button>\n                    <Button variant=\"outline-success\" onClick={() => this.showUpdateForm(idx)}>Update</Button>\n                  </Card.Body>\n                </Card>\n\n              )\n            })}\n\n        </div>\n      </Jumbotron>\n    )\n  }\n}\n\nexport default withAuth0(MyFavoriteBooks);\n"]},"metadata":{},"sourceType":"module"}